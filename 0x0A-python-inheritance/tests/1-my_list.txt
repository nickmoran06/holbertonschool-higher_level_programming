``1-my_list`` module
======================

Using the class ``MyList``


Verifying the importation of the module:
    >>> MyList = __import__("1-my_list").MyList

Verifying that MyList inherits from the parent class list:
    >>> issubclass(MyList, list)
    True

Verifying his purpose:

    Adding reverse more than base 10
        >>> lt = MyList()
    	>>> lt.append(25)
	>>> lt.append(24)
        >>> lt.append(23)
	>>> lt.append(22)
    	>>> print(lt)
    	[25, 24, 23, 22]
    	>>> lt.print_sorted()
    	[22, 23, 24, 25]
    	>>> print(lt)
    	[25, 24, 23, 22]

    Appending negative numbers:
        >>> lt = MyList()
    	>>> lt.append(-25)
	>>> lt.append(-24)
        >>> lt.append(-23)
	>>> lt.append(-22)
    	>>> print(lt)
    	[-25, -24, -23, -22]
    	>>> lt.print_sorted()
    	[-25, -24, -23, -22]
    	>>> print(lt)
	[-25, -24, -23, -22]

    Empty:
        >>> lt = MyList()
	>>> lt.print_sorted()
	[]

    One negative:
        >>> lt = MyList()
        >>> lt.append(4)
        >>> lt.append(5)
        >>> lt.append(6)
	>>> lt.append(-1)
	>>> print(lt)
	[4, 5, 6, -1]
	>>> lt.print_sorted()
	[-1, 4, 5, 6]
	>>> print(lt)
	[4, 5, 6, -1]

Number of arguments:

    More arguments in the print_sorted method:
        >>> lt = MyList()
        >>> lt.print_sorted(2)
	Traceback (most recent call last):
	...
	TypeError: print_sorted() takes 1 positional argument but 2 were given
