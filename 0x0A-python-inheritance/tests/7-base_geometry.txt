``7-base_geometry`` module

============================

Importation:
    >>> BaseGeometry = __import__("7-base_geometry").BaseGeometry

List instead integer
    >>> b = BaseGeometry()
    >>> b.integer_validator("Nicolas", [Moran])
    Traceback (most recent call last):
    ...
    NameError: name 'Moran' is not defined

Negative number
    >>> b = BaseGeometry()
    >>> b.integer_validator("Negative", -4)
    Traceback (most recent call last):
    ValueError: Negative must be greater than 0

Zero number
    >>> b = BaseGeometry()
    >>> b.integer_validator("ZERO", 0)
    Traceback (most recent call last):
    ValueError: ZERO must be greater than 0

Without the second argument
    >>> b = BaseGeometry()
    >>> b.integer_validator("name")
    Traceback (most recent call last):
    TypeError: integer_validator() missing 1 required positional argument: 'value'

Withoutthe first argument
    >>> b = BaseGeometry()
    >>> b.integer_validator(, 12)
    Traceback (most recent call last):
    SyntaxError: invalid syntax

Any argument
    >>> b = BaseGeometry()
    >>> b.integer_validator()
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

Empty area
    >>> b = BaseGeometry()
    >>> b.area()
    Traceback (most recent call last):
    ...
    Exception: area() is not implemented

1 as parameter
    >>> b = BaseGeometry()
    >>> b.integer_validator("age", 1)

More than 1
    >>> b = BaseGeometry()
    >>> b.integer_validator("age", 4)

Review a tuple
    >>> b = BaseGeometry()
    >>> b.integer_validator("age", (4,))
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer

Review list
    >>> b = BaseGeometry()
    >>> b.integer_validator("age", [3])
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer

Review boolean
    >>> b = BaseGeometry()
    >>> b.integer_validator("age", True)
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer

Review dictionary
    >>> b = BaseGeometry()
    >>> b.integer_validator("age", {3, 4})
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer

Review None
    >>> b = BaseGeometry()
    >>> b.integer_validator("age", None)
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer
